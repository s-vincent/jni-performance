/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class performance_Array */

#ifndef _Included_performance_Array
#define _Included_performance_Array
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     performance_Array
 * Method:    getElement
 * Signature: ([JI)J
 */
JNIEXPORT jlong JNICALL Java_performance_Array_getElement
  (JNIEnv *, jobject, jlongArray, jint);

/*
 * Class:     performance_Array
 * Method:    setElement
 * Signature: ([JIJ)V
 */
JNIEXPORT void JNICALL Java_performance_Array_setElement
  (JNIEnv *, jobject, jlongArray, jint, jlong);

/*
 * Class:     performance_Array
 * Method:    setElements
 * Signature: ([JII)V
 */
JNIEXPORT void JNICALL Java_performance_Array_setElements
  (JNIEnv *, jobject, jlongArray, jint, jint);

/*
 * Class:     performance_Array
 * Method:    getElementWithRegion
 * Signature: ([JI)J
 */
JNIEXPORT jlong JNICALL Java_performance_Array_getElementWithRegion
  (JNIEnv *, jobject, jlongArray, jint);

/*
 * Class:     performance_Array
 * Method:    setElementWithRegion
 * Signature: ([JIJ)V
 */
JNIEXPORT void JNICALL Java_performance_Array_setElementWithRegion
  (JNIEnv *, jobject, jlongArray, jint, jlong);

/*
 * Class:     performance_Array
 * Method:    setElementsWithRegion
 * Signature: ([JII)V
 */
JNIEXPORT void JNICALL Java_performance_Array_setElementsWithRegion
  (JNIEnv *, jobject, jlongArray, jint, jint);

/*
 * Class:     performance_Array
 * Method:    getElementWithCritical
 * Signature: ([JI)J
 */
JNIEXPORT jlong JNICALL Java_performance_Array_getElementWithCritical
  (JNIEnv *, jobject, jlongArray, jint);

/*
 * Class:     performance_Array
 * Method:    setElementWithCritical
 * Signature: ([JIJ)V
 */
JNIEXPORT void JNICALL Java_performance_Array_setElementWithCritical
  (JNIEnv *, jobject, jlongArray, jint, jlong);

/*
 * Class:     performance_Array
 * Method:    setElementsWithCritical
 * Signature: ([JII)V
 */
JNIEXPORT void JNICALL Java_performance_Array_setElementsWithCritical
  (JNIEnv *, jobject, jlongArray, jint, jint);

/*
 * Class:     performance_Array
 * Method:    doWork
 * Signature: ([Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_performance_Array_doWork
  (JNIEnv *, jobject, jobjectArray);

/*
 * Class:     performance_Array
 * Method:    doWorkWithDeleteLocalReference
 * Signature: ([Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_performance_Array_doWorkWithDeleteLocalReference
  (JNIEnv *, jobject, jobjectArray);

/*
 * Class:     performance_Array
 * Method:    doWorkWithEnsureLocalCapacity
 * Signature: ([Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_performance_Array_doWorkWithEnsureLocalCapacity
  (JNIEnv *, jobject, jobjectArray);

#ifdef __cplusplus
}
#endif
#endif
